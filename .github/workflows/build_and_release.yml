name: Build and Release

on:
  push:
  workflow_dispatch:

permissions:
    id-token: write
    contents: read

jobs:
  release:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout code
        uses: actions/checkout@v3

      - name: Setup | Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: x86_64-unknown-linux-musl

      - name: Setup | musl tools
        run: sudo apt install -y musl-tools

      - name: Build | Tests
        run: cargo test --release --target x86_64-unknown-linux-musl

      - name: Deploy | Move binary
        run: mv ./target/x86_64-unknown-linux-musl/release/handler .

      - name: Deploy | Compress deploy package
        run: zip -r deploy.zip handler v* host.json

      - name: Deploy | Authenticate
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy | Azure Function
        run: az functionapp deployment source config-zip -g ${{ secrets.AZURE_RESOURCE_GROUP }} -n ${{ secrets.AZURE_APP_NAME }} --src deploy.zip

  test_deployment:
    needs: release
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Deploy Test | Make Request
      id: httpTest
      uses: fjogeleit/http-request-action@v1
      with:
        method: GET
        url: "https://${{ secrets.AZURE_APP_NAME }}.azurewebsites.net/api/v1"
        timeout: 30000
        
    - name: Deploy Test | Show Response
      run: |
        echo ${{ steps.httpTest.outputs.response }}
