name: Build and Release

on:
  push:
  workflow_dispatch:

jobs:
  release:
    name: Deploy to Azure Function
    runs-on: ubuntu-20.04
    steps:
      - name: Setup | Checkout code
        uses: actions/checkout@v2

      - name: Setup | Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: x86_64-unknown-linux-musl

      - id: cargo-cache
        name: Cache
        uses: Swatinem/rust-cache@v1
        with:
          key: release-azure-function

      - name: Setup | musl tools
        run: sudo apt install -y musl-tools

      - name: Build | Tests
        run: cargo test --release --target x86_64-unknown-linux-musl

      - name: Build | Build
        run: cargo build --release --target x86_64-unknown-linux-musl

      - name: Deploy | Move binary
        run: mv ./target/x86_64-unknown-linux-musl/release/handler .

      - name: Deploy | Compress deploy package
        run: zip -r deploy.zip handler v* host.json

      - name: Deploy | Authenticate
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy | Azure Function
        run: az functionapp deployment source config-zip -g ${{ secrets.AZURE_RESOURCE_GROUP }} -n ${{ secrets.AZURE_APP_NAME }} --src deploy.zip

  test deployment:
    name: Test Deployment
    runs-on: ubuntu-20.04
    steps:
    - name: Make Request
      id: httpTest
      uses: fjogeleit/http-request-action@v1
      with:
        url: "https://${{ secrets.AZURE_APP_NAME }}.azurewebsites.net/api/v1"
    - name: Show Response
      run: |
        echo ${{ steps.httpTest.outputs.response }}